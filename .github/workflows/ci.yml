name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable

    - name: Install dependencies
      run: npm ci

    - name: Run frontend tests
      run: npm run test:coverage -w frontend

    - name: Run Storybook tests
      run: npm run test-storybook:ci -w frontend

    - name: Run backend tests
      run: npm run test:coverage -w backend

    - name: Check test coverage
      run: |
        # Install bc if needed
        sudo apt-get update && sudo apt-get install -y bc
        
        check_coverage() {
          local project=$1
          echo "Checking coverage for $project..."
          
          # Run coverage and capture output
          npm run test:coverage -w $project > coverage_output.txt 2>&1
          
          # Extract coverage percentage from vitest output
          COVERAGE=$(grep -E "Lines\s+:\s+[0-9]+(\.[0-9]+)?%" coverage_output.txt | sed -E 's/.*Lines\s+:\s+([0-9]+(\.[0-9]+)?)%.*/\1/' | head -1)
          
          if [ -z "$COVERAGE" ]; then
            echo "Could not extract coverage for $project"
            cat coverage_output.txt
            return 1
          fi
          
          echo "$project coverage: $COVERAGE%"
          
          # Use awk for floating point comparison instead of bc
          if awk "BEGIN {exit !($COVERAGE < 80)}"; then
            echo "$project test coverage is below 80%: $COVERAGE%"
            return 1
          fi
          
          echo "$project coverage check passed"
          return 0
        }
        
        check_coverage frontend && check_coverage backend

    - name: Lint check
      run: |
        npm run lint -w frontend
        npm run lint -w backend

    - name: Build check
      run: npm run build
